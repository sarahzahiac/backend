package ikasaidi.backend_lab.models;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import lombok.Data;

import java.util.ArrayList;
import java.util.List;

/**
 * Entit√© JPA repr√©sentant une s√©rie.
 *
 * Cette classe contient les informations principales d'une s√©rie :
 * son titre, son genre, son nombre d'√©pisodes et sa note moyenne.
 *
 *
 *
 * Elle est li√©e √† plusieurs autres entit√©s :
 * <ul>
 *     <li>{@link Episodes} ‚Äî pour la liste des √©pisodes appartenant √† la s√©rie.</li>
 *     <li>{@link Ratings} ‚Äî pour les √©valuations donn√©es par les utilisateurs.</li>
 *     <li>{@link VuesHistory} ‚Äî pour les enregistrements d‚Äôhistorique de visionnage.</li>
 * </ul>
 *
 *
 * Les donn√©es sont mapp√©es √† la table <strong>series</strong> dans la base de donn√©es.
 *
 * @author Rachel
 * @author Sarah
 * @author Ikram
 * @version 1.0
 */
@Data
@Entity
@Table(name = "series")
public class Series {

    /** Identifiant unique de la s√©rie (cl√© primaire). */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /** Titre de la s√©rie. */
    private String title;

    /** Genre principal de la s√©rie (ex. "Action", "Com√©die", "Drame"). */
    private String genre;

    /** Nombre total d'√©pisodes dans la s√©rie. */
    private int nbEpisodes;

    /** Note moyenne attribu√©e √† la s√©rie (souvent bas√©e sur les √©valuations des utilisateurs). */
    private double note;

    /**
     * Constructeur complet de la s√©rie.
     *
     * @param id identifiant unique
     * @param title titre de la s√©rie
     * @param genre genre de la s√©rie
     * @param nbEpisodes nombre total d'√©pisodes
     * @param note note moyenne de la s√©rie
     */
    public Series(Long id, String title, String genre, int nbEpisodes, double note) {
        this.id = id;
        this.title = title;
        this.genre = genre;
        this.nbEpisodes = nbEpisodes;
        this.note = note;
    }

    /** Constructeur par d√©faut (requis par JPA). */
    public Series() {}

    /** @return identifiant unique de la s√©rie */
    public Long getId() {
        return id;
    }

    /** @param id identifiant unique √† d√©finir */
    public void setId(Long id) {
        this.id = id;
    }

    /** @return titre de la s√©rie */
    public String getTitle() {
        return title;
    }

    /** @param title nouveau titre √† d√©finir */
    public void setTitle(String title) {
        this.title = title;
    }

    /** @return genre de la s√©rie */
    public String getGenre() {
        return genre;
    }

    /** @param genre nouveau genre √† d√©finir */
    public void setGenre(String genre) {
        this.genre = genre;
    }

    /** @return nombre total d‚Äô√©pisodes */
    public int getNbEpisodes() {
        return nbEpisodes;
    }

    /** @param nbEpisodes nouveau nombre d‚Äô√©pisodes */
    public void setNbEpisodes(int nbEpisodes) {
        this.nbEpisodes = nbEpisodes;
    }

    /** @return note moyenne de la s√©rie */
    public double getNote() {
        return note;
    }

    /** @param note nouvelle note moyenne √† d√©finir */
    public void setNote(double note) {
        this.note = note;
    }

    // üîπ Relations avec d'autres entit√©s

    /**
     * Liste des √©pisodes appartenant √† cette s√©rie.
     *
     * Relation OneToMany avec {@link Episodes}.
     *
     */
    @OneToMany(mappedBy = "series")
    @JsonIgnoreProperties("series")
    private List<Episodes> episodes = new ArrayList<>();

    /**
     * Liste des √©valuations associ√©es √† cette s√©rie.
     *
     * Relation OneToMany avec {@link Ratings}.
     *
     */
    @OneToMany(mappedBy = "series")
    @JsonIgnoreProperties({"series", "person"})
    private List<Ratings> ratings = new ArrayList<>();

    /**
     * Liste des historiques de visionnage li√©s √† cette s√©rie.
     *
     * Relation OneToMany avec {@link VuesHistory}.
     *
     */
    @OneToMany(mappedBy = "series")
    @JsonIgnoreProperties({"series", "person"})
    private List<VuesHistory> viewsHistories = new ArrayList<>();

    /** @return liste des √©valuations associ√©es */
    public List<Ratings> getRatings() {
        return ratings;
    }

    /** @param ratings nouvelle liste d‚Äô√©valuations √† d√©finir */
    public void setRatings(List<Ratings> ratings) {
        this.ratings = ratings;
    }
}
